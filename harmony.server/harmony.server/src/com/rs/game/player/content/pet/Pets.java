package com.rs.game.player.content.pet;

import java.util.HashMap;
import java.util.Map;

import com.rs.game.player.Player;

/**
 * An enum containing all the pets and their info.
 * @author Emperor
 *
 */

public enum Pets {
	

	/**
	 * A cat/kitten pet.
	 */
	CAT(1555, 1561, 1567, 761, 768, 774, 0.0154320987654321, 0, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 1927),
	CAT_1(1556, 1562, 1568, 762, 769, 775, 0.0154320987654321, 0, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 1927),
	CAT_2(1557, 1563, 1569, 763, 770, 776, 0.0154320987654321, 0, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 1927),
	CAT_3(1558, 1564, 1570, 764, 771, 777, 0.0154320987654321, 0, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 1927),
	CAT_4(1559, 1565, 1571, 765, 772, 778, 0.0154320987654321, 0, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 1927),
	CAT_5(1560, 1566, 1572, 766, 773, 779, 0.0154320987654321, 0, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 1927),
	HELLCAT(7583, 7582, 7581, 3505, 3504, 3503, 0.0154320987654321, 0, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 1927),
	CAT_7(14089, 14090, 15092, 8217, 8214, 8216, 0.0154320987654321, 0, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 1927),
	
	/**
	 * A clockwork cat.
	 */
	CLOCKWORK_CAT(7771, 7772, -1, 3598, -1, -1, 0.0, 0),
	
	/**
	 * The firemaker's curse pets.
	 */
	SEARING_FLAME(22994, -1, -1, 14769, -1, -1, 0.0, 0),
	GLOWING_EMBER(22993, -1, -1, 14768, -1, -1, 0.0, 0),
	TWISTED_FIRESTARTER(22995, -1, -1, 14770, -1, -1, 0.0, 0),
	WARMING_FLAME(22992, -1, -1, 14767, -1, -1, 0.0, 0),
	
	/**
	 * Troll baby pet.
	 */
	TROLL_BABY(23030, 23030, -1, 14846, -1, -1, 0.0, 0),

	/**
	 * A bulldog pet.
	 */
	BULLDOG(12522, 12523, -1, 6969, 6968, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	BULLDOG_1(12720, 12721, -1, 7259, 7257, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	BULLDOG_2(12722, 12723, -1, 7260, 7258, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	
	/**
	 * A dalmation pet.
	 */
	DALMATIAN(12518, 12519, -1, 6964, 6965, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	DALMATIAN_1(12712, 12713, -1, 7249, 7250, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	DALMATIAN_2(12714, 12715, -1, 7251, 7252, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	
	/**
	 * A greyhound pet.
	 */
	GREYHOUND(12514, 12515, -1, 6960, 6961, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	GREYHOUND_1(12704, 12705, -1, 7241, 7242, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	GREYHOUND_2(12706, 12707, -1, 7243, 7244, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),

	/**
	 * A labrador pet.
	 */
	LABRADOR(12516, 12517, -1, 6962, 6963, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	LABRADOR_1(12708, 12709, -1, 7245, 7246, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	LABRADOR_2(12710, 12711, -1, 7247, 7248, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),

	/**
	 * A sheepdog pet.
	 */
	SHEEPDOG(12520, 12521, -1, 6966, 6967, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	SHEEPDOG_1(12716, 12717, -1, 7253, 7254, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	SHEEPDOG_2(12718, 12719, -1, 7255, 7256, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	
	/**
	 * A terrier pet.
	 */
	TERRIER(12512, 12513, -1, 6958, 6859, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	TERRIER_1(12700, 12701, -1, 7237, 7238, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	TERRIER_2(12702, 12703, -1, 7239, 7240, -1, 0.0033333333333333, 4, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 526),
	
	/**
	 * A creeping hand pet.
	 */
	CREEPING_HAND(14652, -1, -1, 8619, -1, -1, 0.0033333333333333, 4, 1059),
	
	/**
	 * Minitrice pet.
	 */
	MINITRICE(14653, -1, -1, 8620, -1, -1, 0.0033333333333333, 4, 225),
	
	/**
	 * Baby basilisk pet.
	 */
	BABY_BASILISK(14654, -1, -1, 8621, -1, -1, 0.0033333333333333, 4, 221),

	/**
	 * Baby kurask pet.
	 */
	BABY_KURASK(14655, -1, -1, 8622, -1, -1, 0.0033333333333333, 4, 526),
	
	/**
	 * Abyssal minion pet.
	 */
	ABYSSAL_MINION(14651, -1, -1, 8624, -1, -1, 0.0033333333333333, 4, 592),
	
	/**
	 * Rune guardian pets.
	 */
	RUNE_GUARDIAN(15626, -1, -1, 9656, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_1(15627, -1, -1, 9657, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_2(15628, -1, -1, 9658, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_3(15629, -1, -1, 9659, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_4(15630, -1, -1, 9660, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_5(15631, -1, -1, 9661, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_6(15632, -1, -1, 9662, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_7(15633, -1, -1, 9663, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_8(15634, -1, -1, 9664, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_9(15635, -1, -1, 9665, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_10(15636, -1, -1, 9666, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_11(15637, -1, -1, 9667, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_12(15638, -1, -1, 9668, -1, -1, 0.0033333333333333, 4),
	RUNE_GUARDIAN_13(15639, -1, -1, 9669, -1, -1, 0.0033333333333333, 4),

	/**
	 * Gecko pet.
	 */
	GECKO(12488, 12489, -1, 6915, 6916, -1, 0.005, 10, 12125, 12127),
	GECKO_1(12738, 12742, -1, 7277, 7281, -1, 0.005, 10, 12125, 12127),
	GECKO_2(12739, 12743, -1, 7278, 7282, -1, 0.005, 10, 12125, 12127),
	GECKO_3(12740, 12744, -1, 7279, 7283, -1, 0.005, 10, 12125, 12127),
	GECKO_4(12741, 12745, -1, 7280, 7284, -1, 0.005, 10, 12125, 12127),

	/**
	 * The platypus pet.
	 */
	PLATYPUS(12551, 12548, -1, 7018, 7015, -1, 0.0046296296296296, 10, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 313, 12129),
	PLATYPUS_1(12552, 12549, -1, 7019, 7016, -1, 0.0046296296296296, 10, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 313, 12129),
	PLATYPUS_2(12553, 12550, -1, 7020, 7017, -1, 0.0046296296296296, 10, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 313, 12129),

	/**
	 * The broav pet.
	 */
	BROAV(14533, -1, -1, 8491, -1, -1, 0.0, 23, 2970),
	
	/**
	 * The penguin pet.
	 */
	PENGUIN(12481, 12482, -1, 6908, 6909, -1, 0.0046296296296296, 30, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),
	PENGUIN_1(12763, 12762, -1, 7313, 7314, -1, 0.0046296296296296, 30, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),
	PENGUIN_2(12765, 12764, -1, 7316, 7317, -1, 0.0046296296296296, 30, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),

	/**
	 * A tooth creature pet.
	 */
	TOOTH_CREATURE(18671, 18669, -1, 11411, 11413, -1, 0.075757575757576, 37, 1927, 1977),
	
	/**
	 * A giant crab pet.
	 */
	GIANT_CRAB(12500, 12501, -1, 6947, 6948, -1, 0.0069444444444444, 40, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),
	GIANT_CRAB_1(12746, 12747, -1, 7293, 7294, -1, 0.0069444444444444, 40, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),
	GIANT_CRAB_2(12748, 12749, -1, 7295, 7296, -1, 0.0069444444444444, 40, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),
	GIANT_CRAB_3(12750, 12751, -1, 7297, 7298, -1, 0.0069444444444444, 40, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),
	GIANT_CRAB_4(12752, 12753, -1, 7299, 7300, -1, 0.0069444444444444, 40, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),

	/**
	 * A Raven pet.
	 */
	RAVEN(12484, 12485, -1, 6911, 6912, -1, 0.00698888, 50, 313, 12129),
	RAVEN_1(12724, 12725, -1, 7261, 7262, -1, 0.00698888, 50, 313, 12129),
	RAVEN_2(12726, 12727, -1, 7263, 7264, -1, 0.00698888, 50, 313, 12129),
	RAVEN_3(12728, 12729, -1, 7265, 7266, -1, 0.00698888, 50, 313, 12129),
	RAVEN_4(12730, 12731, -1, 7267, 7268, -1, 0.00698888, 50, 313, 12129),
	RAVEN_5(12732, 12733, -1, 7269, 7270, -1, 0.00698888, 50, 313, 12129),

	/**
	 * A squirrel pet.
	 */
	SQUIRREL(12490, 12491, -1, 6919, 6920, -1, 0.0071225071225071, 60, 12130),
	SQUIRREL_1(12754, 12755, -1, 7301, 7302, -1, 0.0071225071225071, 60, 12130),
	SQUIRREL_2(12756, 12757, -1, 7303, 7304, -1, 0.0071225071225071, 60, 12130),
	SQUIRREL_3(12758, 12759, -1, 7305, 7306, -1, 0.0071225071225071, 60, 12130),
	SQUIRREL_4(12760, 12761, -1, 7307, 7308, -1, 0.0071225071225071, 60, 12130),
	
	/**
	 * Godbirds.
	 */
	SARADOMIN_OWL(12503, 12504, 12505, 6949, 6950, 6951, 0.0069444444444444, 70, 313, 12129),
	ZAMORAK_HAWK(12506, 12507, 12508, 6952, 6953, 6954, 0.0069444444444444, 70, 313, 12129),
	GUTHIX_RAPTOR(12509, 12510, 12511, 6955, 6956, 6957, 0.0069444444444444, 70, 313, 12129),

	/**
	 * Ex-ex parrot
	 */
	EX_EX_PARROT(13335, -1, -1, 7844, -1, -1, 0.0, 71, 13379),
	
	/**
	 * The phoenix eggling pets.
	 */
	CUTE_PHOENIX_EGGLING(14627, -1, -1, 8578, -1, -1, 0.0, 72, 592),
	MEAN_PHOENIX_EGGLING(14626, -1, -1, 8577, -1, -1, 0.0, 72, 592),
	
	/**
	 * A raccoon pet.
	 */
	RACCOON(12486, 12487, -1, 6913, 6914, -1, 0.0029444444444444, 80, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 2132, 2134, 2136, 2138, 10816, 9986, 9978),
	RACCOON_1(12734, 12735, -1, 7271, 7272, -1, 0.0029444444444444, 80, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 2132, 2134, 2136, 2138, 10816, 9986, 9978),
	RACCOON_2(12736, 12737, -1, 7273, 7274, -1, 0.0029444444444444, 80, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270, 2132, 2134, 2136, 2138, 10816, 9986, 9978),
	
	/**
	 * A sneaker peeper pet.
	 */
	SNEAKER_PEEPER(19894, 19895, -1, 13089, 13090, -1, 0.05, 80, 221),

	/**
	 * A vulture pet.
	 */
	VULTURE(12498, 12499, -1, 6945, 6946, -1, 0.0078, 85, 313, 12129),
	VULTURE_1(12766, 12767, -1, 7319, 7320, -1, 0.0078, 85, 313, 12129),
	VULTURE_2(12768, 12769, -1, 7321, 7322, -1, 0.0078, 85, 313, 12129),
	VULTURE_3(12770, 12771, -1, 7323, 7324, -1, 0.0078, 85, 313, 12129),
	VULTURE_4(12772, 12773, -1, 7325, 7326, -1, 0.0078, 85, 313, 12129),
	VULTURE_5(12774, 12775, -1, 7327, 7328, -1, 0.0078, 85, 313, 12129),
	
	/**
	 * other pets
	 */

	GAMFRED(29247, 29247, -1, 29980, 29980, -1, -1, 1, -1, -1),
	RABBIT(28969, 28969, -1, 29974, 29974, -1, -1, 1, -1, -1),

	/**
	 * Skilling pets
	 */
	FISHING(29520, 29520, -1, 6702, 6702, -1, -1, 1, -1, -1),
	FIREMAKING(29521, 29521, -1, 30091, 30091, -1, -1, 1, -1, -1),
	COOKING(29522, 29522, -1, 30090, 30090, -1, -1, 1, -1, -1),
	MINING(29523, 29523, -1, 30089, 30089, -1, -1, 1, -1, -1),
	WOODCUTTING(29524, 29524, -1, 30094, 30094, -1, -1, 1, -1, -1),
	HUNTER(29525, 29525, -1, 30093, 30093, -1, -1, 1, -1, -1),
	/**
	 * Boss pets
	 */

	ADMINVORAGO(12556, 12556, -1, 39025, 39025, -1, 0.0078, 85, 313, 12129),
	VORAGO(29760, 29760, -1, 29999, 29999, -1, 0.0078, 1, 313, 12129),
	SNOWMAN(11951, 11951, -1, 13637, 13637, -1, -1, 1, 313, 12129),
	SANTA(15420, 15420, -1, 30007, 30007, -1, -1, 1, 313, 12129),
	JADEX(29861, 29861, -1, 29995, 29995, -1, -1, 1, -1, -1),
	GLACEY(29860, 29860, -1, 29994, 29994, -1, -1, 1, -1, -1),
	DRYAXJ(29859, 29859, -1, 30136, 30136, -1, -1, 1, -1, -1),
	SNOWIMP(4671, 4671, -1, 14765, 14765, -1, -1, 1, -1, -1),
	SUNNY(29853, 29853, -1, 30017, 30017, -1, -1, 1, -1, -1),
	CALF(29851, 29851, -1, 29991, 29991, -1, -1, 1, -1, -1),
	GARG(29852, 29852, -1, 29990, 29990, -1, -1, 1, -1, -1),
	DARK_FEAST(29850, 29850, -1, 29992, 29992, -1, -1, 1, -1, -1),
	FROSTY(29849, 29849, -1, 29989, 29989, -1, -1, 1, -1, -1),
	ICEY(29848, 29848, -1, 29988, 29988, -1, -1, 1, -1, -1),
	CCREATURE(29797, 29797, -1, 30020, 30020, -1, -1, 1, -1, -1),
	MINIMAX(29796, 29796, -1, 30021, 30021, -1, -1, 1, -1, -1),
	ZOMB(29778, 29778, -1, 31016, 31016, -1, -1, 1, -1, -1),
	BLINKY(29777, 29777, -1, 31017, 31017, -1, -1, 1, -1, -1),
	SKELETALWONDER(29776, 29776, -1, 31018, 31018, -1, -1, 1, -1, -1),
	LITTLEDEVIL(29775, 29775, -1, 31019, 31019, -1, -1, 1, -1, -1),
	UNO(29716, 29716, -1, 30028, 30028, -1, -1, 1, -1, -1),
	INGENUITYJR(29704, 29704, -1, 30032, 30032, -1, -1, 1, -1, -1),
	REDEEMER(29703, 29703, -1, 30033, 30033, -1, -1, 1, -1, -1),
	EDI(29702, 29702, -1, 30034, 30034, -1, -1, 1, -1, -1),
	IRONY(29701, 29701, -1, 30035, 30035, -1, -1, 1, -1, -1),
	STEELS(29700, 29700, -1, 30036, 30036, -1, -1, 1, -1, -1),
	FREEZY(29699, 29699, -1, 30038, 30038, -1, -1, 1, -1, -1),
	PUP(29698, 29698, -1, 30039, 30039, -1, -1, 1, -1, -1),
	DUSTY(29697, 29697, -1, 30040, 30040, -1, -1, 1, -1, -1),
	SUPER(29689, 29689, -1, 13656, 13656, -1, -1, 1, -1, -1),
	REAPER(29663, 29663, -1, 3649, 3649, -1, -1, 1, -1, -1),
	GRIM(29657, 29657, -1, 30049, 30049, -1, -1, 1, -1, -1),
	EASTERBUNNYJR(29558, 29558, -1, 7412, 7412, -1, -1, 1, -1, -1),
	THEENFORCER(29201, 29201, -1, 30150, 30150, -1, -1, 1, -1, -1),

	BANDOS(29907, 29907, -1, 30003, 30003, -1, -1, 1, 313, 12129), SARADOMIN(29905, 29905, -1, 30005, 30005, -1, -1, 1, 313, 12129), ZAMORAK(29904, 29904, -1, 30006, 30006, -1, -1, 1, 313, 12129), ARMADYL(29906, 29906, -1, 30004, 30004, -1, -1, 1, 313, 12129), CORPIE(29865, 29865, -1, 30001, 30001, -1, -1, 1, -1, -1), NEXY(29864, 29864, -1, 29998, 29998, -1, -1, 1, -1, -1), WWYRM(29863, 29863, -1, 29997, 29997, -1, -1, 1, -1, -1), AWYRM(29526, 29526, -1, 30086, 30086, -1, -1, 1, -1, -1), KINGY(29862, 29862, -1, 29996, 29996, -1, -1, 1, -1, -1), JAKINDO(29847, 29847, -1, 29987, 29987, -1, -1, 1, -1, -1), TECTONIC(29842, 29842, -1, 30018, 30018, -1, -1, 1, -1, -1), BALLY(29841, 29841, -1, 30019, 30019, -1, -1, 1, -1, -1), DRYGONIE(29786, 29786, -1, 30023, 30023, -1, -1, 1, -1,
			-1), DISCODEMON(29706, 29706, -1, 30029, 30029, -1, -1, 1, -1, -1),
	LILTHUNDER(29586, 29586, -1, 30077, 30077, -1, -1, 1, -1, -1),
	BABYANIVIA(29566, 29566, -1, 30084, 30084, -1, -1, 1, -1, -1),
	SMOKEDEVIL(29449, 29449, -1, 37639, 37639, -1, -1, 1, -1, -1),
	CALLISTOCUB(29380, 29380, -1, 36558, 36558, -1, -1, 1, -1, -1),
	SIRE(29442, 29442, -1, 36883, 36883, -1, -1, 1, -1, -1),
	OLMLET(29437, 29437, -1, 38519, 38519, -1, -1, 1, -1, -1),
	HELLPUPPY(29415, 29415, -1, 31964, 31964, -1, -1, 1, -1, -1),
	MINICHEESECAKE(29403, 29403, -1, 30139, 30139, -1, -1, 1, -1, -1),
	M1INICHEESECAKE(29402, 29402, -1, 30140, 30140, -1, -1, 1, -1, -1),
	HATIPUP(29218, 29218, -1, 29979, 29979, -1, -1, 1, -1, -1),
	BABYMOLE(29215, 29215, -1, 29978, 29978, -1, -1, 1, -1, -1),
	AMIGOS(28904, 28904, -1, 29970, 29970, -1, -1, 1, -1, -1),
	
	
	
	/**
	 * mini me
	 */
	LEVEL1(29212, 29212, -1, 30146, 30146, -1, -1, 1, -1, -1),
	HEAVENJR(29211, 29211, -1, 30147, 30147, -1, -1, 1, -1, -1),
	MAYUMINI(29206, 29206, -1, 30148, 30148, -1, -1, 1, -1, -1),
	ALIVE(29199, 29199, -1, 30152, 30152, -1, -1, 1, -1, -1), HEAVEN(29198, 29198, -1, 30153, 30153, -1, -1, 1, -1, -1),
	MINIGODRX(29061, 29061, -1, 30155, 30155, -1, -1, 1, -1, -1),
	JUSTICIAR(29010, 29010, -1, 30157, 30157, -1, -1, 1, -1, -1),
	RAPHAEL(28926, 28926, -1, 30173, 30173, -1, -1, 1, -1, -1),
	YAHOO(28925, 28925, -1, 30174, 30174, -1, -1, 1, -1, -1),
	BREH(28924, 28924, -1, 30175, 30175, -1, -1, 1, -1, -1),
	STAN(28923, 28923, -1, 30176, 30176, -1, -1, 1, -1, -1),
	
	
	YOUNGBLOOD(29327, 29327, -1, 30217, 30217, -1, -1, 1, -1, -1),
	SKOTOS(29320, 29320, -1, 38671, 38671, -1, -1, 1, -1, -1),
	VENENATIS(29317, 29317, -1, 31495, 31495, -1, -1, 1, -1, -1),
	SCORPIA(29305, 29305, -1, 36547, 36547, -1, -1, 1, -1, -1),
	VETION(29300, 29300, -1, 36536, 36536, -1, -1, 1, -1, -1),
	VORKI(29189, 29189, -1, 39025, 39025, -1, -1, 1, -1, -1),
	KURADALJR(29182, 29182, -1, 30154, 30154, -1, -1, 1, -1, -1),
	BLOODHOUND(29143, 29143, -1, 37296, 37296, -1, -1, 1, -1, -1),
	IKKLEHYDRA(29141, 29141, -1, 39517, 39517, -1, -1, 1, -1, -1),
	SKEESKEE(29124, 29124, -1, 29977, 29977, -1, -1, 1, -1, -1),
	ZULRAH(29046, 29046, -1, 30156, 30156, -1, -1, 1, -1, -1),
	KRAKEN(29041, 29041, -1, 37640, 37640, -1, -1, 1, -1, -1),
	CKARIL(28987, 28987, -1, 30166, 30166, -1, -1, 1, -1, -1),
	CAHRIM(28988, 28988, -1, 30168, 30168, -1, -1, 1, -1, -1),
	CVERAC(28986, 28986, -1, 30164, 30164, -1, -1, 1, -1, -1),
	MINIRAPTOR(28979, 28979, -1, 30170, 30170, -1, -1, 1, -1, -1),
	
	SEALPUP(29119, 29119, -1, 29976, 29976, -1, -1, 1, -1, -1),
	BABYRACCOON(29118, 29118, -1, 3288, 3288, -1, -1, 1, -1, -1),
	FOX(28935, 28935, -1, 29973, 29973, -1, -1, 1, -1, -1),
	

	/**
	 * Player wars pets
	 */
	CONNOR(29501, 29501, -1, 30116, 30116, -1, -1, 1, -1, -1),
	SKYLINE(29500, 29500, -1, 30117, 30117, -1, -1, 1, -1, -1),
	JAKOB(29499, 29499, -1, 30118, 30118, -1, -1, 1, -1, -1),
	UNPRO(29498, 29498, -1, 30119, 30119, -1, -1, 1, -1, -1),
	LILGECKO(29497, 29497, -1, 30120, 30120, -1, -1, 1, -1, -1),
	HERRO(29496, 29496, -1, 30121, 30121, -1, -1, 1, -1, -1),
	ONEMANDOWN(29495, 29495, -1, 30122, 30122, -1, -1, 1, -1, -1),
	DRWOOPY(29494, 29494, -1, 30123, 30123, -1, -1, 1, -1, -1),
	BLUREDMAU5(29493, 29493, -1, 30124, 30124, -1, -1, 1, -1, -1),
	AMAZING(29492, 29492, -1, 30125, 30125, -1, -1, 1, -1, -1),
	BOIISKILLZ(29491, 29491, -1, 30126, 30126, -1, -1, 1, -1, -1),
	TYE(29490, 29490, -1, 30127, 30127, -1, -1, 1, -1, -1),
	ASY(29489, 29489, -1, 30128, 30128, -1, -1, 1, -1, -1),
	SKILLAHOLIC(29488, 29488, -1, 30129, 30129, -1, -1, 1, -1, -1),
	GUDSTUFF(29487, 29487, -1, 30130, 30130, -1, -1, 1, -1, -1),
	FIRECAPE(29486, 29486, -1, 30131, 30131, -1, -1, 1, -1, -1),
	KHAKI(29485, 29485, -1, 30132, 30132, -1, -1, 1, -1, -1),
	BONEEE(29484, 29484, -1, 30133, 30133, -1, -1, 1, -1, -1),
	HEROIC(29483, 29483, -1, 30134, 30134, -1, -1, 1, -1, -1),
	IIDEFUZE(29482, 29482, -1, 30135, 30135, -1, -1, 1, -1, -1),
	
	
	
	CHOPSTICKS(28960, 28960, -1, 30172, 30172, -1, -1, 1, -1, -1),
	
	



	/**
	 * A chameleon pet.
	 */
	CHAMELEON(12492, 12493, -1, 6922, 6923, -1, 0.0069444444444444, 90, 12125),

	/**
	 * A monkey pet.
	 */
	MONKEY(12496, 12497, -1, 6942, 6943, -1, 0.0069444444444444, 95, 1963),
	MONKEY_1(12682, 12683, -1, 7210, 7211, -1, 0.0069444444444444, 95, 1963),
	MONKEY_2(12684, 12685, -1, 7212, 7213, -1, 0.0069444444444444, 95, 1963),
	MONKEY_3(12686, 12687, -1, 7214, 7215, -1, 0.0069444444444444, 95, 1963),
	MONKEY_4(12688, 12689, -1, 7216, 7217, -1, 0.0069444444444444, 95, 1963),
	MONKEY_5(12690, 12691, -1, 7218, 7219, -1, 0.0069444444444444, 95, 1963),
	MONKEY_6(12692, 12693, -1, 7220, 7221, -1, 0.0069444444444444, 95, 1963),
	MONKEY_7(12694, 12695, -1, 7222, 7223, -1, 0.0069444444444444, 95, 1963),
	MONKEY_8(12696, 12697, -1, 7224, 7225, -1, 0.0069444444444444, 95, 1963),
	MONKEY_9(12698, 12699, -1, 7226, 7227, -1, 0.0069444444444444, 95, 1963),
	
	/**
	 * A baby dragon pet.
	 */
	BABY_DRAGON(12469, 12470, -1, 6900, 6901, -1, 0.0052, 99, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),
	BABY_DRAGON_1(12471, 12472, -1, 6902, 6903, -1, 0.0052, 99, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),
	BABY_DRAGON_2(12473, 12474, -1, 6904, 6905, -1, 0.0052, 99, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),
	BABY_DRAGON_3(12475, 12476, -1, 6906, 6907, -1, 0.0052, 99, 2132, 2134, 2136, 2138, 10816, 9986, 9978, 321, 363, 341, 15264, 345, 377, 353, 389, 7944, 349, 331, 327, 395, 383, 317, 371, 335, 359, 15264, 15270),

	/**
	 * TzRek-Jad pet.
	 */
	TZREK_JAD(21512, -1, -1, 3604, -1, -1, 0.0, 99),
	
	/**
	 * Dragonkk's pet, as requested.
	 */
	FERRET(10092, -1, -1, 5559, -1, -1, 0.0, 99),

	/**
	 * Emperor's (me) pet.
	 */
	GIANT_WOLPERTINGER(8888, -1, -1, 6990, -1, -1, 0.0, 99);
	
	/**
	 * The baby pets mapping.
	 */
	private static final Map<Integer, Pets> babyPets = new HashMap<Integer, Pets>();
	
	/**
	 * The grown pets mapping.
	 */
	private static final Map<Integer, Pets> grownPets = new HashMap<Integer, Pets>();
	
	/**
	 * The overgrown pets mapping.
	 */
	private static final Map<Integer, Pets> overgrownPets = new HashMap<Integer, Pets>();
	
	/**
	 * Populates the mappings.
	 */
	static {
		for (Pets pet : Pets.values()) {
			babyPets.put(pet.babyItemId, pet);
			if (pet.grownItemId > 0) {
				grownPets.put(pet.grownItemId, pet);
				if (pet.getOvergrownItemId() > 0) {
					overgrownPets.put(pet.overgrownItemId, pet);
				}
			}
		}
	}
	
	/**
	 * Gets the pet object for the item id.
	 * @param itemId The item id.
	 * @return The pet object.
	 */
	public static Pets forId(int itemId) {
		Pets pet = babyPets.get(itemId);
		if (pet == null) {
			pet = grownPets.get(itemId);
			if (pet == null) {
				return overgrownPets.get(itemId);
			}
			return pet;
		}
		return pet;
	}
	
	/**
	 * Checks if a player has a pet.
	 * @param player The player.
	 * @return {@code True} if so.
	 */
	public static boolean hasPet(Player player) {
		for (int itemId : babyPets.keySet()) {
			if (player.getInventory().containsOneItem(itemId)) {
				return true;
			}
		}
		for (int itemId : grownPets.keySet()) {
			if (player.getInventory().containsOneItem(itemId)) {
				return true;
			}
		}
		for (int itemId : overgrownPets.keySet()) {
			if (player.getInventory().containsOneItem(itemId)) {
				return true;
			}
		}
		return false;
	}
	
	/**
	 * The baby item id.
	 */
	private final int babyItemId;
	
	/**
	 * The grown pet's item id.
	 */
	private final int grownItemId;
	
	/**
	 * The overgrown pet's item id.
	 */
	private final int overgrownItemId;
	
	/**
	 * The baby pet NPC id.
	 */
	private final int babyNpcId;
	
	/**
	 * The grown pet NPC id.
	 */
	private final int grownNpcId;
	
	/**
	 * The overgrown pet NPC id.
	 */
	private final int overgrownNpcId;
	
	/**
	 * The growth rate.
	 */
	private final double growthRate;
	
	/**
	 * The summoning level required.
	 */
	private final int summoningLevel;
	
	/**
	 * The food this pet uses.
	 */
	private final int[] food;
	
	/**
	 * Constructs a new {@code Pets} {@code Object}.
	 * @param babyItemId The baby pet item id.
	 * @param grownItemId The grown pet item id.
	 * @param overgrownItemId The overgrown item id.
	 * @param babyNpcId The baby pet npc id.
	 * @param grownNpcId The grown pet npc id.
	 * @param overgrownNpcId The overgrown npc id.
	 * @param growthRate The growth rate (amount to increase growth with every tick).
	 * @param summoningLevel The summoning level required.
	 * @param food The food item ids the pet uses.
	 */
	private Pets(int babyItemId, int grownItemId, int overgrownItemId, int babyNpcId, int grownNpcId, int overgrownNpcId, double growthRate, int summoningLevel, int...food) {
		this.babyItemId = babyItemId;
		this.grownItemId = grownItemId;
		this.overgrownItemId = overgrownItemId;
		this.babyNpcId = babyNpcId;
		this.grownNpcId = grownNpcId;
		this.overgrownNpcId = overgrownNpcId;
		this.growthRate = growthRate;
		this.summoningLevel = summoningLevel;
		this.food = food;
	}

	/**
	 * Gets the babyItemId.
	 * @return The babyItemId.
	 */
	public int getBabyItemId() {
		return babyItemId;
	}

	/**
	 * Gets the grownItemId.
	 * @return The grownItemId.
	 */
	public int getGrownItemId() {
		return grownItemId;
	}

	/**
	 * Gets the overgrownItemId.
	 * @return The overgrownItemId.
	 */
	public int getOvergrownItemId() {
		return overgrownItemId;
	}

	/**
	 * Gets the babyNpcId.
	 * @return The babyNpcId.
	 */
	public int getBabyNpcId() {
		return babyNpcId;
	}

	/**
	 * Gets the grownNpcId.
	 * @return The grownNpcId.
	 */
	public int getGrownNpcId() {
		return grownNpcId;
	}

	/**
	 * Gets the overgrownNpcId.
	 * @return The overgrownNpcId.
	 */
	public int getOvergrownNpcId() {
		return overgrownNpcId;
	}

	/**
	 * Gets the growthRate.
	 * @return The growthRate.
	 */
	public double getGrowthRate() {
		return growthRate;
	}

	/**
	 * Gets the summoningLevel.
	 * @return The summoningLevel.
	 */
	public int getSummoningLevel() {
		return summoningLevel;
	}

	/**
	 * Gets the food.
	 * @return The food.
	 */
	public int[] getFood() {
		return food;
	}

	/**
	 * Gets the NPC id for this pet.
	 * @param stage The stage of the pet.
	 * @return The NPc id.
	 */
	public int getNpcId(int stage) {
		switch (stage) {
		case 0:
			return babyNpcId;
		case 1:
			return grownNpcId;
		case 2:
			return overgrownNpcId;
		}
		return 0;
	}
	
	// static int zulrahpet = Utils.random(33127, 33129);

	/**
	 * Gets the item id for this pet.
	 * @param stage The stage of the pet.
	 * @return The item id.
	 */
	public int getItemId(int stage) {
		switch (stage) {
		case 0:
			return babyItemId;
		case 1:
			return grownItemId;
		case 2:
			return overgrownItemId;
		}
		return 0;
	}
}